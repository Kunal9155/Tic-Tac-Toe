{"version":3,"sources":["components/Icon.js","App.js","reportWebVitals.js","index.js"],"names":["Icon","name","className","itemArray","Array","fill","App","useEffect","Aos","init","duration","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","itenNumber","toast","type","Fragment","Container","position","Row","Col","md","Button","onClick","map","item","index","Card","CardBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0e6472b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {FaTimes, FaPen , FaRegCircle} from \"react-icons/fa\"\r\n\r\nconst Icon =({name}) => {\r\n  \r\n    switch (name) {\r\n        case 'circle':\r\n            return <FaRegCircle className=\"icon\"/>\r\n         case 'cross':\r\n            return <FaTimes className=\"icon\"/>\r\n        default:\r\n             return <FaPen className=\"icon\"/>\r\n  \r\n    }  \r\n}\r\n\r\nexport default Icon","\nimport React , {useState}from \"react\";\nimport { useEffect } from 'react'\nimport Aos from \"aos\"\nimport \"aos/dist/aos.css\"\n\n\nimport Icon from \"./components/Icon\"\n\n// TOASTIFY \nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// BOOTSTRAP\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\n//COMPONENT FROM REACT STRAP\nimport {Card , CardBody ,Container ,Button , Col,Row} from \"reactstrap\"\nimport { directive } from \"@babel/types\";\n\nconst itemArray = new Array(9).fill(\"empty\")\n\n\n\n\nconst App=() => {\n\n  useEffect(() => {\n    Aos.init({duration:2000});\n  }, [])\n  // useEffect(() =>{\n  //    Aos.init({duration:2000});\n  // } ,[]);\n\nconst [isCross , setIsCross] = useState(false)\n\nconst [winMessage , setWinMessage] = useState (\"\")\n\nconst reloadGame =() => {\n  setIsCross(false)\n  setWinMessage(\"\")\n  itemArray.fill(\"empty\",0,9);\n}\n\nconst checkIsWinner =() =>{\n  if(itemArray[0] ===itemArray[1] && itemArray[0] ===itemArray[2] && itemArray[0] !== \"empty\"){\n    setWinMessage(`${itemArray[0]} wins `)\n  }\n  else if(\n    itemArray[3] ===itemArray[4] && itemArray[3] ===itemArray[5] && itemArray[3] !== \"empty\"\n  ){\n    setWinMessage(`${itemArray[3]} wins `)\n  }\n  else if(itemArray[6] ===itemArray[7] && \n    itemArray[7] ===itemArray[8] && \n    itemArray[6] !== \"empty\"){\n    setWinMessage(`${itemArray[6]} wins `)\n  }\n  else if(itemArray[0] ===itemArray[3] && \n    itemArray[3] ===itemArray[6] && \n    itemArray[0] !== \"empty\"){\n    setWinMessage(`${itemArray[0]} wins `)\n  }\n  else if(itemArray[1] ===itemArray[4] && \n    itemArray[4] ===itemArray[7] && \n    itemArray[1] !== \"empty\"){\n    setWinMessage(`${itemArray[1]} wins `)\n  }\n  else if(itemArray[2] ===itemArray[5] && \n    itemArray[5] ===itemArray[8] && \n    itemArray[2] !== \"empty\"){\n    setWinMessage(`${itemArray[2]} wins `)\n  }\n  else if(itemArray[0] ===itemArray[4] && \n    itemArray[4] ===itemArray[8] && \n    itemArray[0] !== \"empty\"){\n    setWinMessage(`${itemArray[0]} wins `)\n  }\n  else if(itemArray[2] ===itemArray[4] && \n    itemArray[4] ===itemArray[6] && \n    itemArray[2] !== \"empty\"){\n    setWinMessage(`${itemArray[6]} wins  `)\n  }\n}\n\nconst changeItem =itenNumber =>{\n\nif(winMessage){\n  return toast(winMessage, {type:\"success\"});\n}\n\nif(itemArray[itenNumber] === \"empty\"){\n  itemArray[itenNumber] = isCross ? \"cross\" : \"circle\"\n  setIsCross(!isCross)\n}\n\nelse{\n  return toast(\"already filled\", {type:\"error\"});\n}\n\ncheckIsWinner();\n\n};\n\n  return (\n<React.Fragment>\n  <div>\n    <h1 data-aos=\"fade-down\" className=\"text-white mt-3 text-center fw-bold  intro\">\n      Let's Play Tic-Tac-Toe Game ! By KunaL :)</h1>\n  </div>\n<Container className =\"p-5\">\n <ToastContainer position=\"bottom-center\"/>\n <Row>\n   <Col md={6} className=\"offset-md-3\">\n     {winMessage ? (\n       <div className=\"mb-3 mt-2 \">\n         <h1 className=\"text-center wins text-warning text-uppercase\">{winMessage}\n         </h1>\n         <Button className=\"w-100 btn\"   onClick = {reloadGame}>Start a New Game</Button>\n       </div>\n     ): (\n       <h1 data-aos=\"fade-down\"  className = \"text-center  turn\">\n      {isCross ? \"Cross\" : \"Circle\"} turns  \n       </h1>\n     )}\n     <div data-aos=\"fade-up\"  className=\"grid\">\n    {itemArray.map((item,index) => (\n      <Card data-aos=\"flip-up\" className=\"card\"\n        onClick = {() => {changeItem(index)}}>\n        <CardBody className=\"box\">\n                 <Icon name={item}/>\n        </CardBody>\n      </Card>\n    ))}\n     </div>\n   </Col>\n </Row>\n </Container>\n</React.Fragment>\n\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}